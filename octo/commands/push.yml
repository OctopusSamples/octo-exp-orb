description: Pushes a package (.nupkg, .zip, .tar.gz, etc.) package to the built-in NuGet repository in an Octopus Server.
parameters:
  package:
    type: string
    description: Package file to push.
  overwrite_mode:
    type: string
    description: |
      If the package already exists in the repository, the default behavior is to reject the new
      package being pushed (FailIfExists). You can use the overwrite mode to OverwriteExisting or IgnoreIfExists.
    default: "FailIfExists"
  use_delta_compression:
    type: boolean
    description: |
      Allows disabling of delta compression when uploading packages to the Octopus Server. (True
      or False. Defaults to true.)
    default: true
  space:
    type: string
    description: "[Optional] The name or ID of a space within which this command will be executed. The default space will be used if it is omitted."
    default: ""
  server:
    type: string
    description: |
      [Optional] The base URL for your Octopus Server, e.g., 'https://octopus.example.com/'. This URL
      can also be set in the OCTOPUS_CLI_SERVER environment variable.
    default: ""
  api_key:
    type: string
    description: |
      [Optional] Your API key. Get this from the user profile page. Your must provide an apiKey or
      username and password. If the guest account is enabled, a key of API-GUEST can be used. This
      key can also be set in the OCTOPUS_CLI_API_KEY environment variable.
    default: ""
  user:
    type: string
    description: |
      [Optional] Username to use when authenticating with the server. Your must provide an apiKey or
      username and password. This Username can also be set in the OCTOPUS_CLI_USERNAME environment
      variable.
    default: ""
  pass:
    type: string
    description: |
      [Optional] Password to use when authenticating with the server. This Password can also be set
      in the OCTOPUS_CLI_PASSWORD environment variable.
    default: ""
  config_file:
    type: string
    description: "[Optional] Text file of default values, with one 'key = value' per line."
    default: ""
  debug:
    type: boolean
    description: "[Optional] Enable debug logging."
    default: false
  ignore_ssl_errors:
    type: boolean
    description: |
      [Optional] Set this flag if your Octopus Server uses HTTPS but the certificate is not trusted on
      this machine. Any certificate errors will be ignored. WARNING: this option may create a
      security vulnerability.
    default: false
  timeout:
    description: "[Optional] Timeout in seconds for network operations. Default is 600."
    type: string
    default: ""
  proxy:
    type: string
    description: "[Optional] The URL of the proxy to use, e.g., 'https://proxy.example.com'."
    default: ""
  proxy_user:
    description: "[Optional] The username for the proxy."
    type: string
    default: ""
  proxy_pass:
    description: |
      [Optional] The password for the proxy. If both the username and password are omitted and
      proxyAddress is specified, the default credentials are used.
    type: string
    default: ""
  log_level:
    description: |
      [Optional] The log level. Valid options are verbose, debug, information, warning, error and fatal. Defaults to 'debug'.
    type: string
    default: ""
steps:
  - run:
      name: "Push << parameters.package >>"
      command: |
        get_string_value() {
          if test "$2"; then
            PARAMS+=("--$1=$2")
          fi
        }

        get_switch_value() {
          if test $2 = "true"; then
            PARAMS+=("--$1")
          fi
        }

        get_string_value server "<< parameters.server >>"
        get_string_value apiKey "<< parameters.api_key >>"
        get_string_value space "<< parameters.space >>"
        get_string_value package "<< parameters.package >>"
        get_string_value overwrite-mode "<< parameters.overwrite_mode >>"
        get_string_value use-delta-compression "<< parameters.use_delta_compression >>"
        get_string_value user "<< parameters.user >>"
        get_string_value pass "<< parameters.pass >>"
        get_string_value configFile "<< parameters.config_file >>"
        get_string_value timeout "<< parameters.timeout >>"
        get_string_value proxy "<< parameters.proxy >>"
        get_string_value proxyUser "<< parameters.proxy_user >>"
        get_string_value proxyPass "<< parameters.proxy_pass >>"
        get_string_value logLevel "<< parameters.log_level >>"
        get_switch_value ignoreSslErrors "<< parameters.ignore_ssl_errors >>"
        get_switch_value debug "<< parameters.debug >>"

        octo push "${PARAMS[@]}"
